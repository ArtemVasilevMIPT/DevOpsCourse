/*
 * Full-Stack project API
 *
 * This is a Tabletop Website Server based on my Fullstack course [project](https://github.com/ArtemVasilevMIPT/FullstackProject/tree/master)
 *
 * API version: 0.0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/",
		Index,
	},

	Route{
		"GamesCreatePost",
		strings.ToUpper("Post"),
		"/api/games/create",
		GamesCreatePost,
	},

	Route{
		"GamesGetByUserUserIdGet",
		strings.ToUpper("Get"),
		"/api/games/getByUser/{userId}",
		GamesGetByUserUserIdGet,
	},

	Route{
		"GamesGetGameIdGet",
		strings.ToUpper("Get"),
		"/api/games/get/{gameId}",
		GamesGetGameIdGet,
	},

	Route{
		"TokenAccessPost",
		strings.ToUpper("Post"),
		"/api/token/access",
		TokenAccessPost,
	},

	Route{
		"UserAuthPost",
		strings.ToUpper("Post"),
		"/api/user/auth",
		UserAuthPost,
	},

	Route{
		"UserCreatePost",
		strings.ToUpper("Post"),
		"/api/user/create",
		UserCreatePost,
	},

	Route{
		"UserGetUserIdGet",
		strings.ToUpper("Get"),
		"/api/user/get/{userId}",
		UserGetUserIdGet,
	},

	Route{
		"UserUpdateGet",
		strings.ToUpper("Get"),
		"/api/user/update",
		UserUpdateGet,
	},

	Route{
		"UserUpdatePost",
		strings.ToUpper("Post"),
		"/api/user/update",
		UserUpdatePost,
	},
}
